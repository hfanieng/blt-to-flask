{:tracks-using-playlists? nil,
 :carabiner {:port 17000, :bars true},
 :playlist-on-air-only false,
 :window-positions {:carabiner [-399 170],
                    :waveform-detail-1 [1970 35 1772 266],
                    :triggers [-915 31 847 298],
                    :playlist-writer [-1727 467],
                    :overlay [-594 347],
                    :nrepl [-1138 752],
                    :waveform-detail-2 [-1823 515 1196 234],
                    :player-status [2018 44]},
 :send-status? true,
 :triggers [{:bar true,
             :start "Start",
             :channel 1,
             :start-stop false,
             :note 127,
             :gear false,
             :stop true,
             :expressions {:tracked "",
                           :beat "(let [payload {\"Message\"\t\t\t\t\"Track\"\n\t\t\t\"beat-number\"\t\t\tbeat-number\n\t\t\t\"device_name\"\t\t\tdevice-name\n\t\t\t\"track_album\"  \t\ttrack-album\n               \"track_artist\" \t\ttrack-artist\n               \"track_bpm\"\t\t\ttrack-bpm\n\t\t\t\"track_genre\"\t\t\ttrack-genre\n\t\t\t\"track_label\"\t\t\ttrack-label\n\t\t\t\"track_lengths\"\t\ttrack-length\n\t\t\t\"track_title\"  \t\ttrack-title\n               }\n      json-payload (cheshire.core/encode payload)     ; JSON kodieren\n      headers {\"Content-Type\" \"application/json\"}     ; Header setzen\n      request-options {:body json-payload             ; Payload anlegen\n                       :headers headers}]             ; Header in die Optionen einfügen\n  (timbre/info \"Sending JSON payload:\" request-options)  ; JSON und Optionen ausgeben\n  (my-ns/send-json-to-flask-server \"http://127.0.0.1:5000/api/receive_data\" request-options))"},
             :comment "to flask",
             :outputs #beat_link_trigger.util.MidiChoice{:full-name "CoreMIDI4J - "},
             :send true,
             :players #beat_link_trigger.util.PlayerChoice{:number -1},
             :enabled "On-Air",
             :message "Note"}],
 :playlist-stopped-new-threshold 30,
 :playlist-auto-split false,
 :overlay {:public "/Users/heikofanieng/Documents/10 BLT",
           :templates "/Users/heikofanieng/Documents/10 BLT/obs"},
 :expressions {:setup "(defn init-globals []\n  (let [url \"http://127.0.0.1:5000/api/receive_data\"]\n    (swap! globals assoc-in [:flask-server-url] url)))\n\n(init-globals)",
               :shared "(ns my-ns\n  (:require [cheshire.core :as json]\n            [org.httpkit.client :as http]))\n\n(defn send-json-to-flask-server\n  \"Encodes a map as JSON and sends it in a HTTP POST request\n   to the Flask server.\"\n  [url request-options]\n  (http/post url request-options))  ; Optionen (inklusive Header) übergeben"},
 :playlist-min-play-seconds 10,
 :beat-link-trigger-version "8.0.0-SNAPSHOT-14-0x11967",
 :my-settings {"language" "GERMAN", "autoPlayMode" "CONTINUE"}}
